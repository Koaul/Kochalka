{"version":3,"sources":["actions/actions.js","lib/dict.js","components/Roll.jsx","components/UserInfo/ClearButton.jsx","components/UserInfo/index.js","components/Header/ChangeType.jsx","components/Header/index.js","components/EnterName.jsx","components/App.jsx","serviceWorker.js","reducers/index.js","store/store.js","index.js"],"names":["actions","roll","createAction","Math","floor","random","done","clear","setName","changeType","UI_COLORS_DICT","pushUps","sitUps","squats","Button","styled","button","_templateObject","props","type","doneClicked","RollStyled","div","_templateObject2","connect","state","value","rollClick","doneClick","_ref","react_default","a","createElement","toUpperCase","onClick","ClearButton_templateObject","clearClick","ClearButton_Button","UI","UserInfo_templateObject","InfoHead","h3","UserInfo_templateObject2","name","quantity","record","UserInfo_ClearButton","ChangeType_templateObject","ButtonDiv","ChangeType_templateObject2","ChangeType_Button","Head","header","Header_templateObject","ChangeType","Form","form","EnterName_templateObject","InputBox","EnterName_templateObject2","_templateObject3","Input","input","_templateObject4","_useState","useState","_useState2","Object","slicedToArray","text","setText","onSubmit","e","trim","preventDefault","maxLength","onChange","_ref2","target","EnterName_Button","BDiv","App_templateObject","Div","App_templateObject2","App","components_EnterName","components_Header","components_Roll","components_UserInfo","Boolean","window","location","hostname","match","initialState","localStorage","JSON","parse","handleActions","action","objectSpread","payload","newObj","stringify","store","createStore","reducers","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ef0532e.chunk.js","sourcesContent":["import { createAction } from 'redux-actions'\r\n\r\nconst roll = createAction('roll', () => Math.floor(Math.random()*100))\r\nconst done = createAction('done')\r\nconst clear = createAction('clear')\r\nconst setName = createAction('setName')\r\nconst changeType = createAction('changeType')\r\n\r\nexport default {\r\n    roll,\r\n    done,\r\n    clear,\r\n    setName,\r\n    changeType\r\n}","export const UI_COLORS_DICT = {\r\n    pushUps: 'rgb(66, 176, 244)' ,\r\n    sitUps: 'rgb(101, 244, 66)' ,\r\n    squats: 'rgb(214, 167, 0)'\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport actions from '../actions/actions'\r\nimport { UI_COLORS_DICT } from '../lib/dict'\r\n\r\nconst Button = styled.button`\r\n    border: 1px solid ${props => UI_COLORS_DICT[props.type]};\r\n    background-color: white;\r\n    font-size:16px;\r\n    width:60px;\r\n    margin-top:50px;\r\n    padding:10px;\r\n    display:${props => props.doneClicked ? \"none\" : \"block\"};\r\n    user-select:none;\r\n    &:last-child {\r\n        margin-top:10px;\r\n    }\r\n    &:active, &:focus {\r\n        outline: none;\r\n    }\r\n    @media only screen and (max-width: 900px) {\r\n        width:50px;\r\n        height: 40px;\r\n        font-size: 12px;\r\n        margin-top:10px;\r\n    }\r\n`\r\n\r\nconst RollStyled = styled.div`\r\n    width:85%;\r\n    height:90%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    @media only screen and (max-width: 900px) {\r\n        width:80%;\r\n        height:50%;\r\n        box-sizing:border-box;\r\n        padding-left:5%;\r\n        padding-bottom: 10%;\r\n    }\r\n`\r\n\r\nconst Roll = ({type, value, rollClick, doneClicked, doneClick}) => (\r\n    <RollStyled>\r\n        <div>\r\n            {type.toUpperCase()}: {value}\r\n        </div>\r\n        <Button type={type} onClick={rollClick}>ROLL</Button>\r\n        <Button type={type} doneClicked={doneClicked} onClick={()=>doneClick()}>Done</Button>\r\n    </RollStyled>\r\n)\r\n\r\nRoll.propTypes = {\r\n    value: PropTypes.number,\r\n    type: PropTypes.string,\r\n    rollClick: PropTypes.func.isRequired,\r\n    doneClick: PropTypes.func.isRequired,\r\n    doneClicked: PropTypes.bool\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        value: state.value,\r\n        type: state.type,\r\n        doneClicked: state.doneClicked\r\n    }),\r\n    {\r\n        rollClick: actions.roll,\r\n        doneClick: actions.done\r\n    }\r\n) (Roll)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport actions from '../../actions/actions'\r\nimport {connect} from 'react-redux'\r\nimport { UI_COLORS_DICT } from '../../lib/dict'\r\n\r\nconst Button = styled.button`\r\n    border: 1px solid ${props => UI_COLORS_DICT[props.type]};\r\n    font-size:14px;\r\n    margin:50px;\r\n    background-color:white;\r\n    width: 60px;\r\n    padding:10px;\r\n    @media only screen and (max-width: 900px) {\r\n        margin: 0px;\r\n    }\r\n`\r\n\r\nconst ClearButton = ({type, clearClick}) => (\r\n    <Button type={type} onClick={() => clearClick()}>Clear</Button>\r\n)\r\n\r\nClearButton.propTypes = {\r\n    type: PropTypes.string,\r\n    clearClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        type: state.type\r\n    }),\r\n    {\r\n        clearClick: actions.clear\r\n    }\r\n)(ClearButton)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport CB from './ClearButton'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types';\r\nimport { UI_COLORS_DICT } from '../../lib/dict'\r\n\r\nconst UI = styled.div`\r\n    height:90vh;\r\n    width:15vw;\r\n    display:flex;\r\n    flex-direction:column;\r\n    padding:10px;\r\n    font-size:14px;\r\n    padding-top:2%;\r\n    box-sizing:border-box;\r\n    @media only screen and (max-width: 900px) {\r\n        height: 100%;\r\n        width: 40%;\r\n        font-size:12px;\r\n        padding-top:5%;\r\n    }\r\n`\r\nconst InfoHead = styled.h3`\r\n    color: ${props => UI_COLORS_DICT[props.type]};\r\n    margin-bottom: 0px;\r\n`\r\n\r\n\r\nconst UserInfo = ({pushUps, sitUps, squats, name, type}) => (\r\n    <UI type={type}>\r\n        <span>Name: {name}</span>\r\n        <InfoHead type='pushUps'>PushUps</InfoHead>\r\n            <span>Quantity: {pushUps.quantity} </span>\r\n            <span>Record: {pushUps.record} </span>\r\n        <InfoHead type='sitUps'>SitUps</InfoHead>\r\n            <span>Quantity: {sitUps.quantity} </span>\r\n            <span>Record: {sitUps.record} </span>\r\n        <InfoHead type='squats'>Squats</InfoHead>\r\n            <span>Quantity: {squats.quantity} </span>\r\n            <span>Record: {squats.record} </span>\r\n        <CB/>\r\n    </UI>\r\n)\r\n\r\nUserInfo.propTypes = {\r\n    pushUps: PropTypes.object,\r\n    sitUps: PropTypes.object,\r\n    squats: PropTypes.object,\r\n    name: PropTypes.string,\r\n    type: PropTypes.string\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        pushUps: state[\"pushUps\"],\r\n        sitUps: state[\"sitUps\"],\r\n        squats: state[\"squats\"],\r\n        name: state.name,\r\n        type: state.type\r\n    })\r\n)(UserInfo)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../../actions/actions'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types';\r\nimport { UI_COLORS_DICT } from '../../lib/dict'\r\n\r\nconst Button = styled.button`\r\n    font-size:14px;\r\n    background-color: ${props => UI_COLORS_DICT[props.type]};\r\n    color:white;\r\n    border: none;\r\n    height:50px;\r\n    vertical-align:center;\r\n    text-align:center;\r\n    margin-right:50px;\r\n    padding: 0 15px 0 15px;\r\n    box-sizing:border-box;\r\n    user-select: none;\r\n    &:active, &:focus {\r\n        outline: none;\r\n    }\r\n    @media only screen and (max-width: 900px) {\r\n        margin-top: 5px;\r\n        padding: 0 5px 0 5px;\r\n        height: 20px;\r\n        margin-right:0px;\r\n        &:first-child {\r\n            margin-top: 1px;\r\n        }\r\n    }\r\n`\r\n\r\nconst ButtonDiv = styled.div`\r\n    display:flex;\r\n    width:auto;\r\n    flex-direction:row;\r\n    margin-right:50px;\r\n    box-sizing:border-box;\r\n    @media only screen and (max-width: 900px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst NavBar = ({changeType}) => (\r\n    <ButtonDiv>\r\n        <Button type=\"pushUps\" onClick={()=>changeType(\"pushUps\")}>PushUps</Button>\r\n        <Button type=\"sitUps\" onClick={()=>changeType(\"sitUps\")}>SitUps</Button>\r\n        <Button type=\"squats\" onClick={()=>changeType(\"squats\")}>Squats</Button>\r\n    </ButtonDiv>\r\n)\r\n\r\nNavBar.propTypes = {\r\n    сhangeType: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {\r\n        changeType: actions.changeType\r\n    }\r\n)(NavBar)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport NB from './ChangeType'\r\nimport {connect} from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { UI_COLORS_DICT } from '../../lib/dict'\r\n\r\nconst Head = styled.header`\r\nwidth:100vw;\r\nbackground-color:${props => UI_COLORS_DICT[props.type]};\r\nfont-size: 32px;\r\ncolor: white;\r\nheight:50px;\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\njustify-content:space-between;\r\npadding-left:50px;\r\nbox-sizing:border-box;\r\n@media only screen and (max-width: 900px) {\r\n    height: 80px;\r\n    padding-left:5px;\r\n}\r\n`\r\nconst Header = ({type}) => (\r\n    <Head type={type}>\r\n        <span>Kochalka</span>\r\n        <NB/>\r\n    </Head>\r\n)\r\n\r\nHeader.propTypes = {\r\n    type: PropTypes.string\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        type: state.type\r\n    })\r\n)(Header)","import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport {connect} from 'react-redux'\r\nimport actions from '../actions/actions'\r\nimport PropTypes from 'prop-types';\r\nimport { UI_COLORS_DICT } from '../lib/dict'\r\n\r\nconst Form = styled.form`\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items:center;\r\n    justify-content:space-around;\r\n    position: absolute;\r\n    width:650px;\r\n    height:200px;\r\n    color: white;\r\n    font-size:24px;\r\n    visibility: ${props => props.name ? 'hidden' : 'visible' };\r\n    background-color: ${props => UI_COLORS_DICT[props.type]};\r\n    @media only screen and (max-width: 900px) {\r\n        width:50%;\r\n        height:20%;\r\n        font-size:14px;\r\n    }\r\n`\r\n\r\nconst InputBox = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n`\r\n\r\nconst Button = styled.button`\r\n    background-color: white;\r\n    border: none;\r\n    font-size:30px;\r\n    width: 60px;\r\n    padding:10px;\r\n    font-size:14px;\r\n    margin-left:1px;\r\n    @media only screen and (max-width: 900px) {\r\n        height: 30px;\r\n        width:50px;\r\n        font-size:12px;\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    width:200px;\r\n    height:40px;\r\n    font-size:36px;\r\n    border:none;\r\n    padding: 10px 30px;\r\n    &:focus {\r\n        outline:none;\r\n    }\r\n    @media only screen and (max-width: 900px) {\r\n        height: 20px;\r\n        width:30px;\r\n        font-size:14px;\r\n        padding: 5px 15px;\r\n    }\r\n`\r\n\r\nconst EnterName = ({name, type, setName}) => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        setName(text.trim())\r\n        setText(\"\")\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleChange = ({target}) => setText(target.value)\r\n\r\n    return (\r\n        <Form type={type} name={name} onSubmit={handleSubmit}>\r\n            <span>Enter Your Name</span>\r\n            <InputBox>\r\n            <Input maxLength=\"10\" onChange={handleChange} value={text}/>\r\n                <Button type=\"Submit\">Enter</Button>\r\n            </InputBox>\r\n        </Form>\r\n    )\r\n}\r\n\r\nEnterName.propTypes = {\r\n    name: PropTypes.string,\r\n    type: PropTypes.string,\r\n    setName: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        name: state.name,\r\n        type: state.type\r\n    }),\r\n    {\r\n        setName: actions.setName\r\n    }\r\n) (EnterName)","import React from 'react'\r\nimport Roll from './Roll'\r\nimport styled from 'styled-components'\r\nimport UI from './UserInfo'\r\nimport Header from './Header'\r\nimport EN from './EnterName'\r\n\r\nconst BDiv = styled.div`\r\n    margin:0;\r\n    padding:0;\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    font-size: 24px;\r\n    @media only screen and (max-width: 900px) {\r\n        font-size: 12px;\r\n    }\r\n`\r\nconst Div = styled.div`\r\n    display:flex;\r\n    flex-direction:row;\r\n    align-items:center;\r\n    justify-content:center;\r\n    width:100%;\r\n`\r\n\r\n\r\nconst App = () => (\r\n    <BDiv>\r\n        <EN/>\r\n        <Header/>\r\n        <Div>\r\n            <Roll/>\r\n            <UI/>\r\n        </Div>\r\n    </BDiv>\r\n)\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { handleActions } from 'redux-actions'\r\n\r\nlet initialState\r\n\r\nif(localStorage['Sport']) {\r\n    initialState = JSON.parse(localStorage['Sport'])\r\n} else {\r\n    initialState = {\r\n        pushUps: {\r\n            record: 0,\r\n            quantity: 0\r\n        },\r\n        sitUps: {\r\n            record: 0,\r\n            quantity: 0\r\n        },\r\n        squats: {\r\n            record: 0,\r\n            quantity: 0\r\n        },\r\n        name: \"\",\r\n        value: 0,\r\n        type: \"pushUps\",\r\n        doneClicked: true\r\n   }\r\n}\r\n\r\nexport default handleActions(\r\n    {\r\n        'roll': (state, action) => ({\r\n            ...state,\r\n            value: action.payload,\r\n            doneClicked: false\r\n        }),\r\n  \r\n        'done': (state, action) => {\r\n            let type = state[state.type]\r\n            let newObj = {...state}\r\n            newObj[state.type] = {\r\n                ...type,\r\n                quantity: type.quantity+state.value,\r\n                record: state.value>type.record ? state.value : type.record\r\n            }\r\n            newObj['doneClicked'] = true\r\n            newObj['value'] = 0\r\n            localStorage['Sport'] = JSON.stringify(newObj)\r\n            return newObj\r\n        },\r\n\r\n        'clear': (state, action) => {\r\n            delete localStorage['Sport']\r\n\r\n            return {\r\n                ...state,\r\n                pushUps: {\r\n                    quantity: 0,\r\n                    record: 0\r\n                },\r\n                sitUps: {\r\n                    quantity: 0,\r\n                    record: 0\r\n                },\r\n                squats: {\r\n                    quantity: 0,\r\n                    record: 0\r\n                },\r\n                value: 0,\r\n                name: \"\"\r\n            }\r\n        },\r\n        'setName': (state, action) => ({\r\n                ...state,\r\n                name: action.payload\r\n        }),\r\n        \r\n        'changeType': (state, action) => ({\r\n            ...state,\r\n            type: action.payload,\r\n            value: 0,\r\n            doneClicked: true\r\n        })\r\n    },\r\n    initialState\r\n)\r\n","import reducers from '../reducers/index.js'\r\nimport {createStore} from 'redux'\r\n\r\nconst store = createStore(\r\n    reducers\r\n)\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport {Provider} from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport store from './store/store'\n\nReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    )\n\nserviceWorker.unregister()\n"],"sourceRoot":""}